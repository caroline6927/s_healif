rsconnect::setAccountInfo(name='caroline6927', token='7AD5A4A6094F969176ADAA6C6C7FEFE6', secret='6n1TcxhifkfBXwWSEjSJDY27bUFshST9ET15Hntt')
library(rsconnect)
rsconnect :: deployApp('shiny_project01')
install.packages('Formula')
install.packages(c('HistData', 'Hmisc'))
rsconnect :: deployApp('shiny_project01')
install.packages('HistData')
rsconnect :: deployApp('shiny_project01')
install.packages('UsingR')
install.packages("HistData")
library('HistData')
library('HistData')
install.packages('HistData')
install.packages('devtools')
library('devtools')
?devtools
install.packages('HistData')
library('HistData')
install.packages('HistData')
?install.packages
install.packages('HistData', type = 'win.binary')
library('HistData')
rsconnect::setAccountInfo(name='caroline6927', token='7AD5A4A6094F969176ADAA6C6C7FEFE6', secret='6n1TcxhifkfBXwWSEjSJDY27bUFshST9ET15Hntt')
rsconnect::deployApp('shiny_project0')
rsconnect::setAccountInfo(name='caroline6927', token='7AD5A4A6094F969176ADAA6C6C7FEFE6', secret='6n1TcxhifkfBXwWSEjSJDY27bUFshST9ET15Hntt')
rsconnect::deployApp('shiny_project01')
install.packages('shiny')
rsconnect::setAccountInfo(name='caroline6927', token='7AD5A4A6094F969176ADAA6C6C7FEFE6', secret='6n1TcxhifkfBXwWSEjSJDY27bUFshST9ET15Hntt')
rsconnect::deployApp('shiny_project01')
Y
library(devtools)
devtools::install_github('rstudio/shinyapps')
install.packages('shinyapps')
install.packages('shiny')
devtools::install_github('rstudio/shinyapps')
getwd()
shiny::runApp('shiny_project01')
runApp('shiny_project01')
runApp('shiny_project01')
runApp('shiny_project01')
runApp('shiny_project01')
?fluidPage
runApp('shiny_project02')
?wellPanel
runApp('shiny_project01')
runApp('shiny_project01')
cat()
?cat()
cat('server.r')
cat(file = 'server.r')
a <- cat(file = 'server.r')
install.packages('manipulate')
library('manipulate')
manipulate(plot(1:x), x = slider(1:100))
?manipulate
manipulate(plot(1:x), x = slider(1:100), max = 100)
manipulate(plot(1:x, max = 100), x = slider(1:100), max = 100)
manipulate(plot(1:x), x = slider(1:100, max = 100))
install.packages('rCharts')
require(rCharts)
?install.packages
install.packages.libPaths()
.libPaths()
.libPaths("C:/Program Files/R/R-3.2.4revised/library")
.libPaths()
install.packages('rChart')
install.packages('HistData')
install.packages("HistData")
.libPaths()
.libPaths("C:/Users/user/Documents/R/win-library/3.2")
install.packages('shiny')
.libPaths()
install.packages('rCharts')
dsada
install.packages('rCharts')
.libPaths()
install.packages('rCharts')
install.packages('manipulate')
.libPaths()
install.packages('statistics')
?`libraryIQR-class`
require(rCharts)
install.packages('stats')
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
.libPaths()
install.packages('stats')
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install
install.packages('rsconnect')
.libPaths()
.libPaths(c("C:/Users/user/Documents/R/win-library/3.2" "C:/Program Files/R/R-3.2.4revised/library")
.libPaths(c("C:/Users/user/Documents/R/win-library/3.2" "C:/Program Files/R/R-3.2.4revised/library"))
.libPaths(c("C:/Users/user/Documents/R/win-library/3.2", "C:/Program Files/R/R-3.2.4revised/library"))
.libPaths()
install.packages('shiny')
install.packages('dplyr')
install.packages('ggplot2')
install.packages('ggvis')
require(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('devtools')
require(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
install.packages('googleVis')
?gvisMotionChart
library(googleVis)
suppressPackageStartupMessages(library(googleVis))
?gvisMotionChart
demo(googleVis)
.libPaths()
.libPaths("C:/Users/user/Documents/R/win-library/3.2")
install.packages('caret')
library(rCharts)
?dTable
??dTable
dt <- dTable(
iris,
sPaginationType= "full_numbers"
)
dt
dt
library(shiny)
?h1
?fluidRow
runApp('healif')
install.packages('UsingR')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
?radioButtons
runApp('healif')
runApp('healif')
runApp('healif')
?verbatimTextOutput
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
runApp('healif')
require(rCharts)
runApp('healif')
library(slidify)
getwd()
setwd('slidify_proj01')
author('C_slidify_01')
library(knitr)
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
browseURL('index.html')
getwd()
slidify('index.RMD')
browseURL('index.html')
dt <- data.frame(Day = c('Monday', 'Tuesday','Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'),
Work = c(rep(9, 5), 0 , 0),
Exercise = c(rep(1, 5), 2 , 1),
Commute = c(rep(0.8, 5), 0 , 0)
)
plot(dt)
library(googleVis)
gvisColumnChart(dt)
renderGvis(gvisColumnChart(dt))
print(renderGvis(gvisColumnChart(dt)))
plot(renderGvis(gvisColumnChart(dt)))
plot(gvisColumnChart(dt))
slidify('index.RMD')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
dt <- data.frame(Day = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday"), Work = c(rep(9, 5), 0, 0), Exercise = c(rep(1, 5),
2, 1), Commute = c(rep(0.8, 5), 0, 0))
dt_plot <- gvisColumnChart(dt, xvar = 'Day',
options = list(width = 800, height = 300,
legend="bottom",
title="Start Making Changes!",
titleTextStyle="{color:'Brown',fontName:'Calibri', fontSize:16}",
vAxes="[{title:'Hours Accumulated'}]",
colors="['PaleTurquoise', 'Tomato', 'Teal']",
isStacked = T))
plot(dt_plot)
slidify('index.RMD')
browseURL('index.html')
library(rCharts)
?rCharts
slidify('index.RMD')
slidify('index.RMD')
slidify('index.RMD')
slidify('index.RMD')
slidify('index.RMD')
browseURL('index.html')
browseURL('index.html')
slidify('index.RMD')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
getwd()
?concate
?cat
slidify('index.RMD')
browseURL('index.html')
slidify('index.RMD')
browseURL('index.html')
dt <- data.frame('Monday' = 9, 0.5, 1,
'Tuesday' = 9, 0.5, 1,
'Wednesday' = 9, 0.5, 1,
'Thursday' = 9, 0.5, 1,
'Friday' = 9, 0.5, 1,
'Saturday' = c(0, 2.5, 0),
'Sunday' = c(0, 2, 0))
barplot(as.matrix(dt), xlab='Weekly Plan', ylab = 'Hourly Plan', main='Your Receipe for Health',
legend.text = c("I'm Working :P", 'Daily Workout NEEDED', 'Exercise on the GO'),
col = c('cadetblue', 'coral1', 'darkolivegreen1'),
width = 20, xlim = c(0,300), ylim = c(0,12), space = 1)
?barplot
publish(user = 'caroline6927', repo = 'slidify_healif')
publish(user = 'caroline6927', repo = 'slidify_healif')
publish(user = 'caroline6927', repo = 'slidify_healif')
getwd()
publish('caroline6927', 'slidify_healif')
publish('caroline6927', 'slidify_healif')
